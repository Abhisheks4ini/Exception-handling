1. Write a Java program to insert an element into the array list at the first position.

ans -

import java.util.Scanner;

import java.util.ArrayList;

public class collectionframework {
	
		// TODO Auto-generated method stub

public static void main(String[] args) {
	Scanner s = new Scanner(System.in);
	ArrayList<Integer> list1 =new ArrayList<>();
	System.out.println("add element");
	int a = s.nextInt();
	
 list1.add(a);
 System.out.println("element at first poition - "+list1.get(0));

}
}


output - 
 add element
34
element at first poition - 34

---------------------------------------------------------------------------------------


2. Write a Java program to update specific array element by given element. 

ans -

import java.util.ArrayList;

public class collectionframework {
	
		// TODO Auto-generated method stub

public static void main(String[] args) {
	
	ArrayList<Integer> list1 =new ArrayList<>();
	System.out.println("add element");
	for(int i = 0 ; i < 10 ;i++ ) {
		 list1.add(i);
	}
	
		System.out.print(list1);
	System.out.println();
	System.out.print("updated list1");
	list1.set(3,8000);
	System.out.println();
	
		System.out.print(list1);
	

}
}

output -

add element
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
updated list1
[0, 1, 2, 8000, 4, 5, 6, 7, 8, 9]

------------------------------------------------------------------------------------------

3. Write a Java program to sort a given array list .

ans- 


import java.util.ArrayList;
import java.util.Collections;

public class collectionframework {
	
		// TODO Auto-generated method stub

public static void main(String[] args) {
	
	ArrayList<Integer> list1 =new ArrayList<>();
	System.out.println("add element");
	for(int i = 30; i >20 ;i-- ) {
		 list1.add(i);
	}
	
		System.out.print(list1);
	
	System.out.println();
	System.out.print("updated list1");
	Collections.sort(list1);
	System.out.println();
	
		System.out.print(list1);
	

}
}


output -

add element
[30, 29, 28, 27, 26, 25, 24, 23, 22, 21]
updated list1
[21, 22, 23, 24, 25, 26, 27, 28, 29, 30]




------------------------------------------------------------------------------------------------------------
4. Write a Java program to get the least key greater than or equal to the given key. Returns null if
there is no such key .

ans -

import java.util.*;
import java.util.Collections;

public class collectionframework {
	
		// TODO Auto-generated method stub

	public static void main(String[] args) {
	Scanner s = new Scanner(System.in);
	int sc = s.nextInt();
		
	TreeMap<Integer,String> mp = new TreeMap<>();
	mp.put(1, "black");
	mp.put(12, "white");
	mp.put(17, "red");	
	mp.put(15, "blue");
	mp.put(45, "purple");
	mp.put(31, "yellow");
	
	System.out.println("ceiling key -"+mp.ceilingKey(sc));
	
	
	
	}
	}


output -

34
ceiling key -45
------------------------------------------------------------------------------------------------------------

5. Write a Java program to insert the specified element at the specified position in the linked list. 

ans - 


import java.util.*;
import java.util.Collections;

public class collectionframework {
	
	public static void main(String[] args) {
		
		List<Integer> list1 =new LinkedList<>();
		System.out.println("add element");
		for(int i = 0 ; i < 10 ;i++ ) {
			 list1.add(i);
		}
		
			System.out.print(list1);
		System.out.println();
		System.out.print("updated list1");
		list1.set(3,200);
		System.out.println();
		
			System.out.print(list1);
		
		

	}
	}


output -

add element
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
updated list1
[0, 1, 2, 200, 4, 5, 6, 7, 8, 9]


----------------------------------------------------------------------------------------------------------------------------
6. Write a Java program to get a key-value mapping associated with the least key greater than or
equal to the given key. Return null if there is no such key.


ans- 

import java.util.*;
import java.util.Collections;

public class collectionframework {
	
		// TODO Auto-generated method stub

	public static void main(String[] args) {
	Scanner s = new Scanner(System.in);
	int sc = s.nextInt();
		
	TreeMap<Integer,String> mp = new TreeMap<>();
	mp.put(1, "black");
	mp.put(12, "white");
	mp.put(17, "red");	
	mp.put(15, "blue");
	mp.put(45, "purple");
	mp.put(31, "yellow");
	
	System.out.println("ceiling key -"+mp.ceilingKey(sc)  + "  its value -" + mp.get(mp.ceilingKey(sc)));
	
	
	
	}
	}


output -
25
ceiling key -31  its value -yellow


--------------------------------------------------------------------------------------------------------------------------------------------


7. Write a Java program to test if a map contains a mapping for the specified key. 


ans -

import java.util.*;
import java.util.Collections;

public class collectionframework {
	
		// TODO Auto-generated method stub

	public static void main(String[] args) {
	Scanner s = new Scanner(System.in);
	int sc = s.nextInt();
		
	Map<Integer,String> mp = new HashMap<>();
	mp.put(1, "black");
	mp.put(12, "white");
	mp.put(17, "red");	
	mp.put(15, "blue");
	mp.put(45, "purple");
	mp.put(31, "yellow");
	
	System.out.println(" ispresent -"+mp.containsKey(sc) );
	
	
	
	}
	}

output -

44
 ispresent -false

